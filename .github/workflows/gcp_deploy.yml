name: Build and Deploy to GCR

on:
  push:
    branches:
    - develop

# Environment variables available to all jobs and steps in this workflow
env:
  GCR_PROJECT: ${{ secrets.GCR_PROJECT }}
  GCR_EMAIL: ${{ secrets.GCR_EMAIL }}
  GCR_ZONE: europe-west1
  GCR_SERVICE: over-backend
  GITHUB_SHA: ${{ github.sha }}
  IMAGE: over-backend
  REGISTRY_HOSTNAME: eu.gcr.io

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        service_account_email: ${{ secrets.GCR_EMAIL }}
        service_account_key: ${{ secrets.GCR_KEY }}
        export_default_credentials: true

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        # Set up docker to authenticate
        # via gcloud command-line tool.
        gcloud auth configure-docker

    # Replace tokens with secrets
    - name: Token replace
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '@@'
        tokenSuffix: '@@'
        files: '["**/*.modele"]'
      env:
        MONGO_URI: ${{ secrets.MONGO_URI }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

    # Write token
    - name: Token write
      run: |
        mv .env.modele .env

    # Build the Docker image
    - name: Build
      run: |        
        docker build -t "$REGISTRY_HOSTNAME"/"$GCR_PROJECT"/"$IMAGE":"$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |
        docker push $REGISTRY_HOSTNAME/$GCR_PROJECT/$IMAGE:$GITHUB_SHA

    # Deploy the Docker image to the GKE cluster
    - name: Cloud Run
      uses: stefda/action-cloud-run@v1.0
      with:
        # Name of the docker image
        image: $REGISTRY_HOSTNAME/$GCR_PROJECT/$IMAGE:${GITHUB_SHA}
        # Name of the service in Cloud Run
        service: $GCR_SERVICE
        # GCR project
        project: $GCR_PROJECT
        # GCR region
        region: $GCR_ZONE
        # GCR service key with storage and run permissions
        service key: ${{ secrets.GCR_KEY }}
